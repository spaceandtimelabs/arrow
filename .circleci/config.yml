# CircleCI configuration file
version: 2.1

orbs:
  maven: circleci/maven@1.3.0
  artifactory: jfrog/artifactory-orb@1.0.1

jobs:
  tag:
    executor: maven/default
    working_directory: ~/arrow
    steps:
      - checkout
      - run:
          name: Create Tag
          command: git tag circle-$CIRCLE_BUILD_NUM
      - run:
          name: Push Tag
          command: git push origin --tags
  build:
    docker:
      - image: maven:3.8.6-jdk-8
    steps:
      - checkout
      - run: |
          git tag circle-$CIRCLE_BUILD_NUM
          git push origin --tags
          cd /root/project/java
          mvn install -DskipTests -Dcheckstyle.skip -Drat.skip=true -pl :flight-jdbc-driver -am
          mkdir -p /root/project/artifacts
      - persist_to_workspace:
          root: /root
          paths:
            - project/
            - .m2/
  deploy_submodule:
    executor: maven/default
    working_directory: ~/arrow
    parameters:
      submodule:
        type: string
    steps:
      - checkout
      - artifactory/install
      - artifactory/configure
      - run:
          name: Submodule Name
          command: echo << parameters.submodule >>
      - restore_cache:
          keys:
            - << parameters.submodule >>-dependencies-{{ checksum "java/pom.xml" }}
            - << parameters.submodule >>-dependencies-
      - run:
          name: Build Package
          command: |
            jfrog rt mvn -pl ':<< parameters.submodule >>' clean install -f java/pom.xml -Dcheckstyle.skip -Drat.skip=true -DskipTests -Dmaven.javadoc.skip=true;
      - artifactory/build-integration
      - save_cache:
          paths:
            - ~/.m2
          key: << parameters.submodule >>-dependencies-{{ checksum "java/pom.xml" }}
  maven_deploy:
    docker:
      - image: maven:3.8.6-jdk-8
    steps:
      - attach_workspace:
          at: /root
      - run: |
          mkdir -p /root/.m2
          echo '<settings><servers><server><id>${repo.id}</id><username>${repo.login}</username><password>${repo.pwd}</password></server></servers></settings>' > /root/.m2/settings.xml
          cd /root/project/java/flight/flight-jdbc-driver
          mvn deploy -DskipTests -Drat.skip=true -Dcheckstyle.skip -DaltDeploymentRepository="snapshots::default::$ARTIFACTORY_URL" -e -Drepo.id=snapshots -Drepo.login=$ARTIFACTORY_USER -Drepo.pwd="$ARTIFACTORY_API_KEY" -Dmaven.install.skip=true 

  docker_deploy:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /root
      - run: |
          cd /root/project/java/flight/flight-jdbc-driver
          docker build -f sqlline.Dockerfile . -t spaceandtime.jfrog.io/sxt-docker-docker/ballista-sqlline:$CIRCLE_BUILD_NUM
          docker login -u$ARTIFACTORY_USER -p$ARTIFACTORY_API_KEY spaceandtime.jfrog.io
          docker push spaceandtime.jfrog.io/sxt-docker-docker/ballista-sqlline:$CIRCLE_BUILD_NUM

workflows:
  main_workflow:
    jobs:
      - tag:
          name: Tag Build
      - deploy_submodule:
          name: Build Arrow Java Root JAR
          submodule: arrow-java-root
          context: Artifactory
          requires:
            - Tag Build
      - deploy_submodule:
          name: Build Arrow Format JAR
          submodule: arrow-format
          context: Artifactory
          requires:
            - Build Arrow Java Root JAR
      - deploy_submodule:
          name: Build Arrow Memory JAR
          submodule: arrow-memory
          context: Artifactory
          requires:
            - Build Arrow Java Root JAR
      - deploy_submodule:
          name: Build Arrow Vector JAR
          submodule: arrow-vector
          context: Artifactory
          requires:
            - Build Arrow Java Root JAR
      - deploy_submodule:
          name: Build Arrow Compression JAR
          submodule: arrow-compression
          context: Artifactory
          requires:
            - Build Arrow Java Root JAR
      - deploy_submodule:
          name: Build Arrow Tools JAR
          submodule: arrow-tools
          context: Artifactory
          requires:
            - Build Arrow Java Root JAR
      - deploy_submodule:
          name: Build Arrow JDBC JAR
          submodule: arrow-jdbc
          context: Artifactory
          requires:
            - Build Arrow Java Root JAR
      - deploy_submodule:
          name: Build Arrow Plasma JAR
          submodule: arrow-plasma
          context: Artifactory
          requires:
            - Build Arrow Java Root JAR
      - deploy_submodule:
          name: Build Arrow Flight JAR
          submodule: arrow-flight
          context: Artifactory
          requires:
            - Build Arrow Java Root JAR
      - deploy_submodule:
          name: Build Flight Core JAR
          submodule: flight-core
          context: Artifactory
          requires:
            - Build Arrow Flight JAR
      - deploy_submodule:
          name: Build Flight JDBC Driver JAR
          submodule: flight-jdbc-driver
          context: Artifactory
          requires:
            - Build Arrow JDBC JAR
            - Build Arrow Flight JAR
      - artifactory/docker-publish:
          docker-registry: spaceandtime.jfrog.io/sxt-docker-docker
          docker-steps:
            - restore_cache:
                keys:
                  - sqlline-dockerfile-build-dependencies-{{ checksum "pom.xml" }}
                  - sqlline-dockerfile-build-dependencies-
            - run:
                name: Build Assembly
                command: |
                  cd /root/project/java
                  jfrog rt mvn -pl ':flight-jdbc-driver' clean install -f java/pom.xml -Dcheckstyle.skip -Drat.skip=true -DskipTests -Dmaven.javadoc.skip=true -am;
            - run:
                name: Build Image
                command: |
                  cd /root/project/java/flight/flight-jdbc-driver
                  docker build -f sqlline.Dockerfile . -t $DOCKERTAG
            - save_cache:
                paths:
                  - ~/.m2
                key: sqlline-dockerfile-build-dependencies-{{ checksum "pom.xml" }}
          docker-tag: >-
            spaceandtime.jfrog.io/sxt-docker-docker/ballista-sqlline:$CIRCLE_BUILD_NUM
          name: Publish Flight SQLLine Docker Image
          repository: sxt-docker-docker
          context: Artifactory
          requires:
            - Build Flight JDBC Driver JAR